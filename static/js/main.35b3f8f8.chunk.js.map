{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","user","i","components_Card","key","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","searchinput","target","value","state","inherits","createClass","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.35b3f8f8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\" tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>\r\n        {robots.map((user, i) => {\r\n        return (<Card \r\n            key={robots[i].id} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n            />)\r\n    })}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ onSearchChange }) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input type=\"search\" placeholder=\"Search for a Robot\" className=\"pa3 ba b--green bg-lightest-blue\" onChange={onSearchChange}></input>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px' }}>\r\n        {props.children}\r\n    </div>)\r\n    \r\n}\r\n\r\nexport default Scroll","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchinput: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n            return response.json()\r\n        }).then(users => {\r\n            this.setState({robots: users})\r\n        })\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchinput: event.target.value})\r\n        \r\n       \r\n    }\r\n\r\n    render(){\r\n        const { robots, searchinput } = this.state\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchinput.toLowerCase())\r\n        })\r\n        if (!robots.length) {\r\n           return <h1>LOADING...</h1>\r\n        } else {\r\n            return (\r\n        <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox onSearchChange={this.onSearchChange} />\r\n            <Scroll>\r\n                <CardList robots={filteredRobots} />\r\n            </Scroll>\r\n        </div>\r\n            )  }\r\n      \r\n    }\r\n    }\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}